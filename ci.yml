resources:
  repositories:
    - repository: azure-sdk-build-tools
      type: git
      name: internal/azure-sdk-build-tools

trigger:
  branches:
    include:
      - master
      - feature/*
      - release/*
      - hotfix/*

pr:
  branches:
    include:
      - master
      - feature/*
      - release/*
      - hotfix/*

variables:
  DefaultOptions: '--batch-mode --fail-at-end -Dmaven.wagon.http.pool=false'
  LoggingOptions: '-Dorg.slf4j.simpleLogger.defaultLogLevel=error -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn'
  MemoryOptions: '-Xmx3072m'

stages:
  - stage: Build
    jobs:
      - job: 'Build'
        pool:
          vmImage: 'ubuntu-18.04'
        strategy:
          matrix:
            Java 8:
              ArtifactName: 'java8-packages'
              ProfileFlag: '-Djava8'
              JavaVersion: '1.8'
            # We name this 'packages' because it is the default version we want to ship with.
            Java LTS:
              ArtifactName: 'packages'
              ProfileFlag: '-Djava-lts'
              JavaVersion: '1.11'

        steps:
          - task: Maven@3
            displayName: 'Build and Package'
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'deploy'
              options: '$(DefaultOptions) $(ProfileFlag) -T 1C -DskipTests -Dgpg.skip -Dmaven.javadoc.skip=true -Dcheckstyle.skip=true -Dspotbugs.skip=true --settings eng/settings.xml -DaltDeploymentRepository="local::default::file:///${project.basedir}/output"'
              mavenOptions: '$(LoggingOptions) $(MemoryOptions)'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: $(JavaVersion)
              jdkArchitectureOption: 'x64'
              publishJUnitResults: false

          - task: Maven@3
            displayName: 'Run SpotBugs, Checkstyle, and Javadoc'
            inputs:
                mavenPomFile: pom.xml
                options: '$(DefaultOptions) --no-transfer-progress -DskipTests -Dgpg.skip'
                mavenOptions: '$(MemoryOptions)'
                javaHomeOption: 'JDKVersion'
                jdkVersionOption: $(JavaVersion)
                jdkArchitectureOption: 'x64'
                publishJUnitResults: false
                goals: 'verify'

          - script: |
              cp output/com/microsoft/azure/qpid-proton-j-extensions/**/* $(Build.ArtifactStagingDirectory)
              rm $(Build.ArtifactStagingDirectory)/*.sha1
              rm $(Build.ArtifactStagingDirectory)/*.md5
            displayName: Flatten and copy build outputs

          - publish: $(Build.ArtifactStagingDirectory)
            artifact: $(ArtifactName)
            displayName: 'Publish outputs to $(ArtifactName) artifact'

      - job: 'Test'
        strategy:
          matrix:
            Linux - Java 8:
              OSName: 'Linux'
              OSVmImage: 'ubuntu-18.04'
              ProfileFlag: '-Djava8'
              JavaVersion: '1.8'
            macOS - Java 8:
              OSName: 'macOS'
              OSVmImage: 'macOS-10.15'
              ProfileFlag: '-Djava8'
              JavaVersion: '1.8'
            Windows - Java 8:
              OSName: 'Windows'
              OSVmImage: 'vs2017-win2016'
              ProfileFlag: '-Djava8'
              JavaVersion: '1.8'
            Linux - Java LTS:
              OSName: 'Linux'
              OSVmImage: 'ubuntu-18.04'
              ProfileFlag: '-Djava-lts'
              JavaVersion: '1.11'
            macOS - Java LTS:
              OSName: 'macOS'
              OSVmImage: 'macOS-10.15'
              ProfileFlag: '-Djava-lts'
              JavaVersion: '1.11'
            Windows - Java LTS:
              OSName: 'Windows'
              OSVmImage: 'vs2017-win2016'
              ProfileFlag: '-Djava-lts'
              JavaVersion: '1.11'

        pool:
          vmImage: $(OSVmImage)

        steps:
          - task: Maven@3
            displayName: 'Run Tests'
            inputs:
              mavenPomFile: 'pom.xml'
              options: '$(DefaultOptions) $(ProfileFlag) --settings eng/settings.xml'
              mavenOptions: '-Xmx3072m $(LoggingOptions)'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: $(JavaVersion)
              jdkArchitectureOption: 'x64'
              publishJUnitResults: false
              goals: 'test'

          - task: PublishTestResults@2
            condition: succeededOrFailed()
            inputs:
              mergeTestResults: true
              testRunTitle: '$(OSName) on Java $(JavaVersion)'
